1.
global: глобальный объект, доступный в любом месте приложения.
process: объект, представляющий текущий процесс Node.js, позволяет получить информацию о нем и управлять им.
console: объект, предоставляющий методы для вывода информации в консоль.
Buffer: объект, предоставляющий методы для работы с бинарными данными.
require: функция, позволяющая подключать модули в приложение.
module и exports: объекты, используемые для создания модулей.
2.Асинхронная функция - это функция, которая выполняется в фоновом режиме, не блокируя основной поток выполнения программы. Такие функции часто используются для выполнения длительных операций, которые могут заблокировать основной поток.
3.Системные потоки - это стандартные потоки ввода-вывода, которые доступны в операционной системе. Они могут быть использованы для чтения и записи данных из различных источников, таких как консоль, файлы или сеть.
4.
Функция process.nextTick позволяет добавить функцию в конец очереди выполнения в текущем цикле событий (event loop) Node.js. Это означает, что функция будет выполнена сразу после текущей операции, но перед следующим циклом событий.

Функция setImmediate также позволяет добавить функцию в очередь выполнения, но она добавляет ее в конец очереди выполнения следующего цикла событий. Это означает, что функция будет выполнена только после того, как текущий цикл событий будет завершен.

Основная разница между этими функциями заключается в том, когда они будут выполнены в цикле событий.